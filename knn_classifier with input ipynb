{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/soyab266/100-days-of-machine-learning/blob/main/knn_classifier%20with%20input%20ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "%matplotlib inline\n",
        "from sklearn.model_selection import train_test_split\n",
        "from sklearn.preprocessing import StandardScaler\n",
        "from sklearn.neighbors import KNeighborsClassifier\n"
      ],
      "metadata": {
        "id": "kBf6441qGjgy"
      },
      "execution_count": 127,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df=pd.read_csv('/content/Social_Network_Ads.csv')"
      ],
      "metadata": {
        "id": "YC3wRzJ2l4As"
      },
      "execution_count": 107,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "P9Qba4CVl4Dz",
        "outputId": "a0495e0d-d835-412d-e077-c31bde28e951"
      },
      "execution_count": 108,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "    User ID  Gender  Age  EstimatedSalary  Purchased\n",
              "0  15624510    Male   19            19000          0\n",
              "1  15810944    Male   35            20000          0\n",
              "2  15668575  Female   26            43000          0\n",
              "3  15603246  Female   27            57000          0\n",
              "4  15804002    Male   19            76000          0"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-10af18dc-70ee-4f41-a414-7c7f1a740786\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>User ID</th>\n",
              "      <th>Gender</th>\n",
              "      <th>Age</th>\n",
              "      <th>EstimatedSalary</th>\n",
              "      <th>Purchased</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>15624510</td>\n",
              "      <td>Male</td>\n",
              "      <td>19</td>\n",
              "      <td>19000</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>15810944</td>\n",
              "      <td>Male</td>\n",
              "      <td>35</td>\n",
              "      <td>20000</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>15668575</td>\n",
              "      <td>Female</td>\n",
              "      <td>26</td>\n",
              "      <td>43000</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>15603246</td>\n",
              "      <td>Female</td>\n",
              "      <td>27</td>\n",
              "      <td>57000</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>15804002</td>\n",
              "      <td>Male</td>\n",
              "      <td>19</td>\n",
              "      <td>76000</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-10af18dc-70ee-4f41-a414-7c7f1a740786')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-10af18dc-70ee-4f41-a414-7c7f1a740786 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-10af18dc-70ee-4f41-a414-7c7f1a740786');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 108
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "x=df.iloc[:,2:4].values# .values to convert into np array"
      ],
      "metadata": {
        "id": "cElxu9dsl4Gd"
      },
      "execution_count": 109,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "x.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "YnIL7xF2sDl0",
        "outputId": "a0127d12-a0d6-4f5b-ee96-c7db3c55163e"
      },
      "execution_count": 110,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(400, 2)"
            ]
          },
          "metadata": {},
          "execution_count": 110
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "y=df.iloc[:,-1].values"
      ],
      "metadata": {
        "id": "21oLXI1esDo1"
      },
      "execution_count": 111,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "y.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ilV4071GsDr9",
        "outputId": "cc0d699c-195c-484d-d739-9172584e2d6c"
      },
      "execution_count": 112,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(400,)"
            ]
          },
          "metadata": {},
          "execution_count": 112
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "x_train, x_test,y_train,y_test= train_test_split(x, y, test_size=0.20)"
      ],
      "metadata": {
        "id": "nYGsy_h9sDuv"
      },
      "execution_count": 131,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "x_train.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "as6l5lG4l4Jj",
        "outputId": "0c26d7b0-e3ad-4474-9589-f4990a42a966"
      },
      "execution_count": 132,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(320, 2)"
            ]
          },
          "metadata": {},
          "execution_count": 132
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "x_test.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Ffu20u3Xl4Ma",
        "outputId": "46ea50c7-4f0b-462e-a219-873178680521"
      },
      "execution_count": 133,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(80, 2)"
            ]
          },
          "metadata": {},
          "execution_count": 133
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "scaler=StandardScaler()# using because salary columns are having big values\n",
        "x_train=scaler.fit_transform(x_train)"
      ],
      "metadata": {
        "id": "pYCKhRKSfQB1"
      },
      "execution_count": 134,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "x_train"
      ],
      "metadata": {
        "id": "eelYVNQTfQFM",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "3b106e22-3745-4556-8c12-e4416a465b46"
      },
      "execution_count": 191,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[-0.98571511, -1.46068648],\n",
              "       [ 0.04295883, -0.57284361],\n",
              "       [-1.45329417, -0.18811171],\n",
              "       [-0.70516767,  1.11405783],\n",
              "       [ 0.13647464, -0.80960171],\n",
              "       [-0.98571511, -1.54947077],\n",
              "       [ 0.88460113, -1.46068648],\n",
              "       [ 0.79108532, -0.30649076],\n",
              "       [-0.79868348, -0.24730123],\n",
              "       [ 0.32350626, -1.16473886],\n",
              "       [ 0.32350626,  0.52216258],\n",
              "       [-0.42462023, -1.22392838],\n",
              "       [ 1.44569601,  0.07824115],\n",
              "       [-1.82735742,  0.37418877],\n",
              "       [ 0.79108532, -0.83919647],\n",
              "       [ 2.10030669, -0.80960171],\n",
              "       [ 1.16514857, -0.98717028],\n",
              "       [ 2.10030669, -1.04635981],\n",
              "       [-0.23758861, -0.6616279 ],\n",
              "       [ 1.3521802 ,  0.61094687],\n",
              "       [ 0.32350626, -0.54324885],\n",
              "       [ 0.41702207,  0.01905163],\n",
              "       [ 1.3521802 ,  2.3866326 ],\n",
              "       [ 0.13647464,  1.91311641],\n",
              "       [ 0.22999045, -0.24730123],\n",
              "       [-0.98571511,  0.4333783 ],\n",
              "       [-1.54680998, -0.0401379 ],\n",
              "       [-0.70516767, -1.54947077],\n",
              "       [-0.23758861, -0.36568028],\n",
              "       [ 0.79108532, -1.40149695],\n",
              "       [-0.23758861, -0.30649076],\n",
              "       [-1.07923092,  0.07824115],\n",
              "       [-0.98571511, -0.36568028],\n",
              "       [ 0.32350626,  0.07824115],\n",
              "       [-1.35977836, -1.46068648],\n",
              "       [-1.07923092, -1.57906553],\n",
              "       [-1.26626254, -1.37190219],\n",
              "       [-0.70516767,  0.28540449],\n",
              "       [ 1.44569601,  0.37418877],\n",
              "       [-0.23758861, -0.75041219],\n",
              "       [ 0.13647464,  0.22621496],\n",
              "       [-1.35977836, -0.18811171],\n",
              "       [ 1.81975926, -0.27689599],\n",
              "       [ 0.22999045, -0.36568028],\n",
              "       [-0.79868348,  0.40378354],\n",
              "       [ 0.88460113, -0.60243838],\n",
              "       [-1.7338416 ,  0.01905163],\n",
              "       [-0.51813605,  1.49878974],\n",
              "       [-0.23758861, -0.27689599],\n",
              "       [-1.64032579, -0.98717028],\n",
              "       [-0.42462023, -1.1351441 ],\n",
              "       [-1.7338416 , -1.28311791],\n",
              "       [ 0.51053789,  1.76514259],\n",
              "       [-0.23758861, -0.898386  ],\n",
              "       [ 0.88460113, -0.54324885],\n",
              "       [-0.05055699,  2.26825355],\n",
              "       [-0.33110442,  0.07824115],\n",
              "       [ 0.79108532, -1.10554933],\n",
              "       [ 1.44569601,  1.02527354],\n",
              "       [-1.17274673, -1.40149695],\n",
              "       [ 1.07163276,  2.12027974],\n",
              "       [-1.17274673,  0.31499925],\n",
              "       [ 0.04295883, -0.57284361],\n",
              "       [-0.61165186, -0.33608552],\n",
              "       [-0.51813605,  1.94271117],\n",
              "       [ 1.63272763,  1.64676355],\n",
              "       [-0.23758861,  2.29784831],\n",
              "       [-0.05055699,  0.69973116],\n",
              "       [-0.05055699,  0.07824115],\n",
              "       [ 1.91327507,  0.75892068],\n",
              "       [-1.35977836,  0.37418877],\n",
              "       [ 0.22999045, -0.30649076],\n",
              "       [-0.51813605, -1.519876  ],\n",
              "       [ 0.04295883,  0.04864639],\n",
              "       [ 1.53921182,  1.14365259],\n",
              "       [ 1.44569601, -1.04635981],\n",
              "       [ 0.69756951, -0.72081743],\n",
              "       [-1.35977836, -0.63203314],\n",
              "       [ 0.51053789,  1.88352164],\n",
              "       [-0.1440728 , -0.57284361],\n",
              "       [-0.51813605,  1.41000545],\n",
              "       [ 0.88460113, -0.57284361],\n",
              "       [-1.07923092,  0.4333783 ],\n",
              "       [-0.98571511, -0.33608552],\n",
              "       [ 0.79108532,  0.28540449],\n",
              "       [ 2.00679088,  0.1966202 ],\n",
              "       [-1.64032579,  0.37418877],\n",
              "       [ 0.69756951,  1.82433212],\n",
              "       [-0.1440728 ,  0.87729973],\n",
              "       [-0.23758861, -0.33608552],\n",
              "       [ 2.10030669,  0.40378354],\n",
              "       [ 0.97811695,  1.46919497],\n",
              "       [-0.23758861,  0.07824115],\n",
              "       [ 1.91327507, -0.92798076],\n",
              "       [ 2.00679088,  0.40378354],\n",
              "       [-0.33110442, -0.78000695],\n",
              "       [ 0.32350626,  0.07824115],\n",
              "       [-1.35977836, -0.09932742],\n",
              "       [-0.61165186,  0.58135211],\n",
              "       [-1.07923092, -1.60866029],\n",
              "       [-0.42462023, -0.01054313],\n",
              "       [-0.89219929, -0.30649076],\n",
              "       [-1.26626254,  0.4333783 ],\n",
              "       [ 1.81975926, -1.07595457],\n",
              "       [ 0.41702207,  0.28540449],\n",
              "       [ 2.00679088,  2.17946926],\n",
              "       [-0.23758861, -1.46068648],\n",
              "       [-0.61165186, -1.519876  ],\n",
              "       [-0.89219929,  0.28540449],\n",
              "       [-0.51813605,  0.49256782],\n",
              "       [ 0.22999045, -0.6616279 ],\n",
              "       [-0.23758861,  0.04864639],\n",
              "       [ 0.79108532, -1.37190219],\n",
              "       [-1.64032579, -1.37190219],\n",
              "       [-0.61165186, -1.60866029],\n",
              "       [ 0.13647464,  0.16702544],\n",
              "       [-1.82735742, -0.0401379 ],\n",
              "       [-0.1440728 , -0.27689599],\n",
              "       [-0.05055699,  0.31499925],\n",
              "       [-0.05055699,  0.31499925],\n",
              "       [ 1.16514857, -0.75041219],\n",
              "       [-0.61165186, -0.0401379 ],\n",
              "       [ 0.22999045,  0.25580973],\n",
              "       [ 1.91327507,  0.93648925],\n",
              "       [-1.17274673,  0.28540449],\n",
              "       [-0.98571511,  0.58135211],\n",
              "       [ 0.22999045,  0.07824115],\n",
              "       [-0.05055699, -0.48405933],\n",
              "       [ 2.00679088, -1.19433362],\n",
              "       [ 0.88460113, -1.31271267],\n",
              "       [ 0.04295883, -0.4248698 ],\n",
              "       [ 0.69756951, -1.10554933],\n",
              "       [-0.98571511, -0.33608552],\n",
              "       [-0.23758861, -0.4248698 ],\n",
              "       [ 0.32350626,  0.31499925],\n",
              "       [ 1.07163276,  0.13743068],\n",
              "       [ 0.41702207, -0.15851694],\n",
              "       [ 0.79108532, -1.22392838],\n",
              "       [-1.64032579,  0.49256782],\n",
              "       [ 1.07163276, -0.12892218],\n",
              "       [-0.89219929,  0.58135211],\n",
              "       [-0.1440728 ,  1.64676355],\n",
              "       [-1.07923092, -1.60866029],\n",
              "       [ 0.13647464, -0.80960171],\n",
              "       [ 1.81975926, -1.28311791],\n",
              "       [-1.54680998, -1.57906553],\n",
              "       [ 0.32350626,  0.04864639],\n",
              "       [ 0.13647464,  1.55797926],\n",
              "       [-0.23758861, -0.57284361],\n",
              "       [ 0.32350626, -0.51365409],\n",
              "       [-1.26626254, -0.4248698 ],\n",
              "       [ 1.16514857, -1.46068648],\n",
              "       [ 0.97811695,  0.61094687],\n",
              "       [ 1.16514857,  0.55175735],\n",
              "       [ 1.63272763, -0.898386  ],\n",
              "       [ 0.97811695, -1.19433362],\n",
              "       [-1.7338416 , -1.31271267],\n",
              "       [-0.42462023,  2.35703784],\n",
              "       [ 1.07163276,  0.58135211],\n",
              "       [-1.54680998,  0.07824115],\n",
              "       [-0.05055699, -0.51365409],\n",
              "       [-0.23758861,  1.14365259],\n",
              "       [-1.45329417,  0.34459401],\n",
              "       [-0.98571511, -1.1351441 ],\n",
              "       [-0.1440728 ,  0.16702544],\n",
              "       [-0.05055699,  0.01905163],\n",
              "       [ 0.97811695,  0.13743068],\n",
              "       [ 1.3521802 , -1.43109172],\n",
              "       [ 0.04295883, -0.54324885],\n",
              "       [-0.51813605,  0.90689449],\n",
              "       [-0.70516767,  0.52216258],\n",
              "       [-0.1440728 , -0.45446457],\n",
              "       [ 1.72624344,  1.88352164],\n",
              "       [-0.23758861,  0.22621496],\n",
              "       [-0.1440728 ,  1.67635831],\n",
              "       [ 1.53921182,  0.01905163],\n",
              "       [ 0.04295883,  1.2916264 ],\n",
              "       [ 1.3521802 ,  1.32122116],\n",
              "       [ 0.32350626, -0.72081743],\n",
              "       [ 0.41702207, -0.12892218],\n",
              "       [ 0.41702207, -0.12892218],\n",
              "       [ 1.81975926,  0.13743068],\n",
              "       [ 0.88460113,  2.20906403],\n",
              "       [ 1.44569601,  2.17946926],\n",
              "       [-0.23758861,  0.16702544],\n",
              "       [-1.35977836, -1.22392838],\n",
              "       [ 1.3521802 ,  2.03149545],\n",
              "       [-1.54680998,  0.55175735],\n",
              "       [-1.07923092,  0.31499925],\n",
              "       [ 0.13647464, -0.24730123],\n",
              "       [ 2.00679088,  1.79473736],\n",
              "       [-0.23758861, -1.25352314],\n",
              "       [-1.26626254, -0.33608552],\n",
              "       [ 0.41702207,  2.35703784],\n",
              "       [ 0.41702207,  1.14365259],\n",
              "       [ 0.51053789,  1.26203164],\n",
              "       [ 1.63272763,  1.79473736],\n",
              "       [ 0.97811695, -1.01676505],\n",
              "       [-1.45329417, -1.519876  ],\n",
              "       [ 1.07163276, -1.22392838],\n",
              "       [ 0.22999045,  0.16702544],\n",
              "       [-0.70516767,  0.31499925],\n",
              "       [-1.64032579,  0.37418877],\n",
              "       [ 0.97811695, -1.16473886],\n",
              "       [-0.61165186,  0.1966202 ],\n",
              "       [-1.07923092,  0.34459401],\n",
              "       [ 0.97811695,  2.03149545],\n",
              "       [-1.64032579, -0.60243838],\n",
              "       [ 0.97811695, -1.07595457],\n",
              "       [-0.33110442, -0.78000695],\n",
              "       [-1.26626254,  0.58135211],\n",
              "       [-1.82735742,  0.49256782],\n",
              "       [ 0.88460113, -0.6616279 ],\n",
              "       [ 1.72624344, -0.27689599],\n",
              "       [-1.26626254, -1.25352314],\n",
              "       [-0.89219929, -0.75041219],\n",
              "       [ 0.69756951, -1.40149695],\n",
              "       [-0.33110442,  1.26203164],\n",
              "       [-1.45329417, -0.4248698 ],\n",
              "       [ 1.3521802 , -0.92798076],\n",
              "       [-0.70516767, -0.21770647],\n",
              "       [ 0.04295883, -0.12892218],\n",
              "       [-0.70516767,  0.58135211],\n",
              "       [ 1.91327507, -0.6616279 ],\n",
              "       [ 0.69756951, -1.28311791],\n",
              "       [ 0.13647464,  0.04864639],\n",
              "       [ 1.07163276,  0.49256782],\n",
              "       [ 0.88460113, -1.37190219],\n",
              "       [ 0.32350626, -0.27689599],\n",
              "       [ 0.88460113, -0.78000695],\n",
              "       [ 0.69756951,  0.28540449],\n",
              "       [-0.70516767,  1.38041069],\n",
              "       [-1.07923092, -1.54947077],\n",
              "       [-0.79868348,  0.40378354],\n",
              "       [-0.23758861,  0.07824115],\n",
              "       [ 0.04295883,  1.26203164],\n",
              "       [ 0.32350626, -0.18811171],\n",
              "       [-0.79868348,  0.31499925],\n",
              "       [ 1.53921182,  1.02527354],\n",
              "       [ 0.13647464,  1.91311641],\n",
              "       [-0.1440728 , -1.07595457],\n",
              "       [-0.79868348, -0.78000695],\n",
              "       [ 0.22999045, -0.36568028],\n",
              "       [ 0.13647464,  0.78851544],\n",
              "       [ 0.22999045, -0.27689599],\n",
              "       [-0.1440728 ,  1.43960021],\n",
              "       [-0.05055699,  0.22621496],\n",
              "       [ 0.41702207,  0.10783591],\n",
              "       [-0.23758861,  0.28540449],\n",
              "       [-1.26626254, -1.10554933],\n",
              "       [ 0.79108532,  0.55175735],\n",
              "       [-0.05055699, -0.4248698 ],\n",
              "       [ 0.22999045,  0.16702544],\n",
              "       [-0.98571511,  0.55175735],\n",
              "       [-1.07923092, -1.10554933],\n",
              "       [-1.17274673,  0.61094687],\n",
              "       [-0.89219929,  0.52216258],\n",
              "       [-0.42462023, -0.83919647],\n",
              "       [ 2.10030669,  1.14365259],\n",
              "       [-1.64032579,  0.13743068],\n",
              "       [ 0.04295883, -0.30649076],\n",
              "       [-0.23758861,  0.81811021],\n",
              "       [ 0.22999045, -0.36568028],\n",
              "       [-1.07923092,  1.43960021],\n",
              "       [-0.05055699,  0.16702544],\n",
              "       [ 2.00679088,  0.55175735],\n",
              "       [ 0.22999045, -0.12892218],\n",
              "       [ 0.88460113,  1.0548683 ],\n",
              "       [ 0.6040537 , -0.898386  ],\n",
              "       [-1.07923092, -0.51365409],\n",
              "       [-0.33110442,  1.35081592],\n",
              "       [-0.61165186,  0.13743068],\n",
              "       [ 0.13647464,  0.28540449],\n",
              "       [-0.98571511,  0.61094687],\n",
              "       [-0.61165186, -1.04635981],\n",
              "       [-1.45329417, -1.25352314],\n",
              "       [ 0.32350626,  0.07824115],\n",
              "       [-0.98571511,  0.78851544],\n",
              "       [-0.98571511, -0.45446457],\n",
              "       [ 0.97811695, -1.07595457],\n",
              "       [-1.17274673, -1.07595457],\n",
              "       [ 0.32350626,  0.07824115],\n",
              "       [-1.26626254, -1.49028124],\n",
              "       [-0.70516767, -1.60866029],\n",
              "       [-1.7338416 ,  0.46297306],\n",
              "       [-1.7338416 , -1.43109172],\n",
              "       [-1.07923092,  0.31499925],\n",
              "       [-0.23758861, -0.48405933],\n",
              "       [-0.79868348, -1.22392838],\n",
              "       [-0.61165186, -0.09932742],\n",
              "       [ 0.04295883, -0.24730123],\n",
              "       [-0.42462023, -0.27689599],\n",
              "       [ 0.79108532,  0.78851544],\n",
              "       [ 0.41702207,  0.31499925],\n",
              "       [-0.05055699, -1.07595457],\n",
              "       [ 1.07163276, -1.22392838],\n",
              "       [ 1.91327507, -1.37190219],\n",
              "       [-0.05055699,  0.28540449],\n",
              "       [-0.1440728 ,  2.20906403],\n",
              "       [ 1.91327507,  2.20906403],\n",
              "       [-0.79868348, -0.78000695],\n",
              "       [-0.79868348,  2.32744308],\n",
              "       [-0.51813605, -1.519876  ],\n",
              "       [ 0.22999045,  2.1498745 ],\n",
              "       [ 0.22999045,  1.11405783],\n",
              "       [-0.89219929,  0.4333783 ],\n",
              "       [ 1.72624344,  1.02527354],\n",
              "       [ 0.41702207,  0.61094687],\n",
              "       [-0.89219929,  0.46297306],\n",
              "       [-0.89219929, -1.10554933],\n",
              "       [ 0.41702207,  1.02527354],\n",
              "       [ 0.41702207,  0.16702544],\n",
              "       [-1.07923092, -1.16473886],\n",
              "       [-0.61165186,  1.43960021],\n",
              "       [ 0.88460113,  1.2916264 ],\n",
              "       [ 2.00679088, -0.80960171],\n",
              "       [-0.42462023,  1.2916264 ],\n",
              "       [ 0.22999045,  0.04864639],\n",
              "       [ 1.25866438,  2.26825355],\n",
              "       [-0.79868348,  0.16702544]])"
            ]
          },
          "metadata": {},
          "execution_count": 191
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "x_test=scaler.transform(x_test)\n",
        "x_test"
      ],
      "metadata": {
        "id": "-Os7p6jivAam",
        "outputId": "238a6001-da99-4a6b-a082-537c8e042999",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 190,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[-3.51536991, -2.05259254],\n",
              "       [-3.53286032, -2.05256277],\n",
              "       [-3.57658636, -2.05252423],\n",
              "       [-3.41042743, -2.05256539],\n",
              "       [-3.51536991, -2.05252248],\n",
              "       [-3.68152885, -2.05259692],\n",
              "       [-3.47164388, -2.0525724 ],\n",
              "       [-3.41917263, -2.0525251 ],\n",
              "       [-3.45415346, -2.05252072],\n",
              "       [-3.4978795 , -2.05258028],\n",
              "       [-3.31423015, -2.05260218],\n",
              "       [-3.48038908, -2.05257328],\n",
              "       [-3.67278364, -2.0525759 ],\n",
              "       [-3.59407677, -2.05261006],\n",
              "       [-3.53286032, -2.05258554],\n",
              "       [-3.42791784, -2.05261619],\n",
              "       [-3.54160553, -2.05262057],\n",
              "       [-3.53286032, -2.05257853],\n",
              "       [-3.53286032, -2.05260919],\n",
              "       [-3.59407677, -2.05253474],\n",
              "       [-3.31423015, -2.05260568],\n",
              "       [-3.58533157, -2.0526013 ],\n",
              "       [-3.48038908, -2.05259692],\n",
              "       [-3.6290576 , -2.0525943 ],\n",
              "       [-3.39293701, -2.05262232],\n",
              "       [-3.55035074, -2.05260481],\n",
              "       [-3.51536991, -2.05258028],\n",
              "       [-3.56784115, -2.05258028],\n",
              "       [-3.51536991, -2.05257765],\n",
              "       [-3.31423015, -2.05255313],\n",
              "       [-3.52411512, -2.05258729],\n",
              "       [-3.53286032, -2.05259868],\n",
              "       [-3.48038908, -2.05259079],\n",
              "       [-3.51536991, -2.05257415],\n",
              "       [-3.67278364, -2.05262583],\n",
              "       [-3.53286032, -2.05256539],\n",
              "       [-3.34046577, -2.05253561],\n",
              "       [-3.6203124 , -2.05256627],\n",
              "       [-3.59407677, -2.05259079],\n",
              "       [-3.53286032, -2.0526232 ],\n",
              "       [-3.53286032, -2.05258904],\n",
              "       [-3.41042743, -2.05260831],\n",
              "       [-3.41917263, -2.05255839],\n",
              "       [-3.47164388, -2.05259517],\n",
              "       [-3.55909595, -2.05253999],\n",
              "       [-3.4978795 , -2.05257853],\n",
              "       [-3.61156719, -2.05256714],\n",
              "       [-3.53286032, -2.05262057],\n",
              "       [-3.47164388, -2.05259605],\n",
              "       [-3.42791784, -2.05254875],\n",
              "       [-3.47164388, -2.05259517],\n",
              "       [-3.51536991, -2.05251635],\n",
              "       [-3.53286032, -2.05262232],\n",
              "       [-3.55909595, -2.05251109],\n",
              "       [-3.43666305, -2.05257065],\n",
              "       [-3.39293701, -2.0525251 ],\n",
              "       [-3.5066247 , -2.05258028],\n",
              "       [-3.44540825, -2.0526232 ],\n",
              "       [-3.5066247 , -2.0525724 ],\n",
              "       [-3.51536991, -2.05258817],\n",
              "       [-3.55035074, -2.0525978 ],\n",
              "       [-3.52411512, -2.05259692],\n",
              "       [-3.61156719, -2.05261181],\n",
              "       [-3.41917263, -2.05252773],\n",
              "       [-3.41917263, -2.05251897],\n",
              "       [-3.4978795 , -2.05254963],\n",
              "       [-3.53286032, -2.05257678],\n",
              "       [-3.42791784, -2.05261269],\n",
              "       [-3.59407677, -2.0525943 ],\n",
              "       [-3.41917263, -2.05260656],\n",
              "       [-3.41042743, -2.05261094],\n",
              "       [-3.4978795 , -2.05259079],\n",
              "       [-3.36670139, -2.0526197 ],\n",
              "       [-3.68152885, -2.05260393],\n",
              "       [-3.5066247 , -2.05258904],\n",
              "       [-3.43666305, -2.05253999],\n",
              "       [-3.43666305, -2.05257765],\n",
              "       [-3.60282198, -2.05252248],\n",
              "       [-3.57658636, -2.05259955],\n",
              "       [-3.61156719, -2.05260481]])"
            ]
          },
          "metadata": {},
          "execution_count": 190
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "np.sqrt(x_train.shape[0]) # k=17 first method to find the value of k"
      ],
      "metadata": {
        "id": "RuCvf8aWvAdi",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "4283e151-3e8f-4214-de48-08d770f4ad77"
      },
      "execution_count": 125,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "17.88854381999832"
            ]
          },
          "metadata": {},
          "execution_count": 125
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "k=17\n",
        "\n",
        "knn = KNeighborsClassifier(n_neighbors=k)"
      ],
      "metadata": {
        "id": "bnPnU29qvAgt"
      },
      "execution_count": 129,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "knn.fit(x_train,y_train)"
      ],
      "metadata": {
        "id": "m-uDQvuXvAjj",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "81927f0f-ada6-48fe-a555-e26f73659d1a"
      },
      "execution_count": 137,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "KNeighborsClassifier(n_neighbors=17)"
            ]
          },
          "metadata": {},
          "execution_count": 137
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "y_pred=knn.predict(x_test)"
      ],
      "metadata": {
        "id": "8yCdn9jbvAmy"
      },
      "execution_count": 138,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "y_pred.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "duowtK0cCsJS",
        "outputId": "9c3663d9-afa1-4e63-e35e-aed7bcc19747"
      },
      "execution_count": 139,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(80,)"
            ]
          },
          "metadata": {},
          "execution_count": 139
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "y_test.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Cbhof_ldCsMj",
        "outputId": "93a31023-b82c-47b8-801b-3d0aeec1aa42"
      },
      "execution_count": 140,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(80,)"
            ]
          },
          "metadata": {},
          "execution_count": 140
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.metrics import accuracy_score"
      ],
      "metadata": {
        "id": "8sZaAGjQCsPw"
      },
      "execution_count": 142,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "accuracy_score(y_test,y_pred)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "KNhvpmWvCsTA",
        "outputId": "2d4cd9cc-b193-4302-f387-012ca7033608"
      },
      "execution_count": 143,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.925"
            ]
          },
          "metadata": {},
          "execution_count": 143
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.metrics import confusion_matrix # second method to get the value of k\n",
        "confusion_matrix(y_test,y_pred)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "5-2M85tOCsWv",
        "outputId": "11e14267-afb3-4e20-ff89-4497d11a4cb7"
      },
      "execution_count": 145,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[48,  4],\n",
              "       [ 2, 26]])"
            ]
          },
          "metadata": {},
          "execution_count": 145
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "accuracy=[]\n",
        "for i in range(1,27):\n",
        "  knn=KNeighborsClassifier(n_neighbors=i)\n",
        "  knn.fit(x_train,y_train)\n",
        "  accuracy.append(accuracy_score(y_test,y_pred ))\n"
      ],
      "metadata": {
        "id": "86RMtgEZEHNB"
      },
      "execution_count": 151,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "len(accuracy)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "27uoUbCIEHQN",
        "outputId": "6e4e67cd-1a66-4c0b-a301-e3fbf21f4394"
      },
      "execution_count": 150,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "26"
            ]
          },
          "metadata": {},
          "execution_count": 150
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.plot(range(1,27),accuracy)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 282
        },
        "id": "YXw2XsFTEHTF",
        "outputId": "6058fee3-ab2c-48f5-d5eb-a9d40c385d86"
      },
      "execution_count": 156,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[<matplotlib.lines.Line2D at 0x7f530ed7ff50>]"
            ]
          },
          "metadata": {},
          "execution_count": 156
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "k=11 # third method trail and error\n",
        "knn=KNeighborsClassifier(n_neighbors=k)\n",
        "knn.fit(x_train,y_train)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "rFTHH3jwEHWH",
        "outputId": "06ae3f0e-20ac-4bbc-c6a1-a16105ee1b27"
      },
      "execution_count": 157,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "KNeighborsClassifier(n_neighbors=11)"
            ]
          },
          "metadata": {},
          "execution_count": 157
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "y_pred=knn.predict(x_test)"
      ],
      "metadata": {
        "id": "3ZrlQaU5EHZA"
      },
      "execution_count": 159,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "y_pred.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ixW2e4G3HtZi",
        "outputId": "e4bbf519-cddb-412d-b512-dda77149f64d"
      },
      "execution_count": 160,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(80,)"
            ]
          },
          "metadata": {},
          "execution_count": 160
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "def predict_output():\n",
        "  age=int(input('enter your age'))\n",
        "  salary=int(input('enter your salary'))\n",
        "  x_new=np.array([[age],[salary]]).reshape(1,2)\n",
        "  x_new=scaler.transform(x_new)\n",
        "  return knn.predict(x_new)\n"
      ],
      "metadata": {
        "id": "TT_UCZESSufS"
      },
      "execution_count": 187,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "predict_output()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ztZO3jsQSui0",
        "outputId": "26d6b035-f7f6-44ce-ebaa-a4e24f682acc"
      },
      "execution_count": 188,
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "enter your age20\n",
            "enter your salary30000\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([0])"
            ]
          },
          "metadata": {},
          "execution_count": 188
        }
      ]
    }
  ],
  "metadata": {
    "colab": {
      "name": "knn classifier .ipynb",
      "provenance": [],
      "collapsed_sections": [],
      "mount_file_id": "15wGNYkS024uN3QhofFOdguQR3xEP-d4q",
      "authorship_tag": "ABX9TyNlxBbXSsarUQ1oybZQjewe",
      "include_colab_link": true
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}